/* Advent of code, day 14, puzzle 1
   http://adventofcode.com/2016/day/14
 */
import java.security.MessageDigest
import javax.xml.bind.DatatypeConverter
options binary

input = 'jlmsuwbz'
md5 = MessageDigest.getInstance('MD5')
found = 0

loop nr = 0 until found = 64
	message = input || nr
	hash = md5.digest(message.getBytes())
	hexstr = rexx DatatypeConverter.printHexBinary(hash)
	what = findthree(hexstr)
	if what \= '' then loop m = nr + 1 to nr + 1001
		message = input || m
		hash = md5.digest(message.getBytes())
		hexstr = rexx DatatypeConverter.printHexBinary(hash)
		if findfiveof(hexstr,what) then do
			found = found + 1
			leave
			end
		end
	end

say nr

method findthree(hexstr) static
	loop while hexstr \= ''
		parse hexstr needle +1 hexstr
		if hexstr.substr(1,2) == needle.copies(2) then return needle
		end
	return ''

method findfiveof(hexstr, digit) static
	needle = digit.copies(5)
	return hexstr.pos(needle) > 0
